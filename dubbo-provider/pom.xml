<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>dubbo-demo</artifactId>
        <groupId>vip.ipav.dubbo</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>dubbo-provider</artifactId>
    <dependencies>
        <dependency>
            <groupId>vip.ipav.dubbo</groupId>
            <artifactId>dubbo-api</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <profiles>
        <!--运行方式-->
        <!--根目录下执行：mvn clean install-->
        <!--当前目录下执行：mvn -PProvider -DskipTests clean package exec:exec-->
        <profile>
            <id>Provider</id>
            <properties>
                <mainClass>vip.ipav.dubbo.starter.Provider</mainClass>
                <port>9999</port>
                <build.profile.id>open</build.profile.id>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <configuration>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>${mainClass}</argument>
                                <argument>${port}</argument>
                                <!--代码main方法，可以通过args[0]等方式获取下面参数-->
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!-- 资源根目录排除各环境的配置，使用单独的资源目录来指定 -->
                <excludes>
                    <exclude>config-open/*</exclude>
                    <exclude>config/*</exclude>
                </excludes>
            </resource>
            <resource>
                <!-- 根据参数指定资源目录 -->
                <directory>src/main/resources/config-${build.profile.id}</directory>
                <!-- 指定编译后的目录即生成文件位置（默认为WEB-INF/class） -->
                <targetPath>config</targetPath>
            </resource>
        </resources>
    </build>


</project>